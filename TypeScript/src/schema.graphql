type Vehiculo {
    id: ID!
    placa: String!
    modelo: String!
    color: String!
    usuario: Usuario! # A単adir el campo usuario
}

type Salida {
    id: ID!
    vehiculo_id: ID!
    fecha_salida: String!
    other_fields: String
    vehiculo: Vehiculo
}

type Reserva {
    id: ID!
    vehiculo: Vehiculo!
    usuario: Usuario!
    fechaReserva: String! # A単adir el campo fechaReserva
}

type Entrada {
    id: ID!
    vehiculo_id: ID!
    fecha_entrada: String!
    vehiculo: Vehiculo
}

type Usuario {
    id: ID!
    nombre: String!
    email: String!
    contrasena: String!
}

type Espacio {
    id: ID!
    numero_parquedero: Int!
    disponible: Boolean!
}


input VehiculoInput {
    placa: String!
    modelo: String!
    color: String!
    usuario: ID! # A単adir el campo usuario
}

input SalidaInput {
    vehiculo_id: ID!
    fecha_salida: String!
    
}

input ReservaInput {
    vehiculo: ID!
    usuario: ID!
    fechaReserva: String! # A単adir el campo fechaReserva
}

input EntradaInput {
    vehiculo_id: ID!
    fecha_entrada: String!
    other_fields: String
}

input UsuarioInput {
    nombre: String!
    email: String!
    contrasena: String!
}

input EspacioInput {
    numero_parquedero: Int!
    disponible: Boolean!
}

type Query {
    vehiculos: [Vehiculo]
    vehiculo(id: ID!): Vehiculo

    salidas: [Salida]
    salida(id: ID!): Salida

    reservas: [Reserva]
    reserva(id: ID!): Reserva

    entradas: [Entrada]
    entrada(id: ID!): Entrada

    usuarios: [Usuario]
    usuario(id: ID!): Usuario

    espacios: [Espacio]
    espacio(id: ID!): Espacio
}
type Mutation {
    createVehiculo(input: VehiculoInput!): Vehiculo
    updateVehiculo(id: ID!, input: VehiculoInput!): Vehiculo
    deleteVehiculo(id: ID!): Boolean

    createSalida(input: SalidaInput!): Salida
    updateSalida(id: ID!, input: SalidaInput!): Salida
    deleteSalida(id: ID!): Boolean

    createReserva(input: ReservaInput!): Reserva
    updateReserva(id: ID!, input: ReservaInput!): Reserva
    deleteReserva(id: ID!): Boolean

    createEntrada(input: EntradaInput!): Entrada
    updateEntrada(id: ID!, input: EntradaInput!): Entrada
    deleteEntrada(id: ID!): Boolean

    createUsuario(input: UsuarioInput!): Usuario
    updateUsuario(id: ID!, input: UsuarioInput!): Usuario
    deleteUsuario(id: ID!): Boolean

    createEspacio(input: EspacioInput!): Espacio
    updateEspacio(id: ID!, input: EspacioInput!): Espacio
    deleteEspacio(id: ID!): Boolean
}