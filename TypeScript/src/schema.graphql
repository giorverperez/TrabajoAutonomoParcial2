# schema.graphql

type Vehiculo {
  id: ID!
  placa: String!
  marca: String!
  modelo: String!
  color: String!
}

type Query {
  vehiculos: [Vehiculo!]!
  vehiculo(id: ID!): Vehiculo
}

type Mutation {
  createVehiculo(input: VehiculoInput!): Vehiculo!
  updateVehiculo(id: ID!, input: VehiculoInput!): Vehiculo!
  deleteVehiculo(id: ID!): Boolean!
}

input VehiculoInput {
  placa: String!
  marca: String!
  modelo: String!
  color: String!
}


#Usuario

type Usuario {
  id: ID!
  nombre: String!
  email: String!
  contrasena: String!
}

type Query {
  usuarios: [Usuario!]!
  usuario(id: ID!): Usuario
}

type Mutation {
  crearUsuario(input: UsuarioInput!): Usuario!
  actualizarUsuario(id: ID!, input: UsuarioInput!): Usuario!
  eliminarUsuario(id: ID!): Boolean!
}

input UsuarioInput {
  nombre: String!
  email: String!
  contrasena: String!
}

#Espacio

type Espacio {
  id: ID!
  numero_parqueadero: Int!
  disponible: Boolean!
}

type Query {
  espacios: [Espacio!]!
  espacio(id: ID!): Espacio
}

type Mutation {
  crearEspacio(input: CrearEspacioInput!): Espacio!
  actualizarEspacio(id: ID!, input: ActualizarEspacioInput!): Espacio!
  eliminarEspacio(id: ID!): Boolean!
}

input CrearEspacioInput {
  numero_parqueadero: Int!
  disponible: Boolean!
}

input ActualizarEspacioInput {
  numero_parqueadero: Int
  disponible: Boolean
}

